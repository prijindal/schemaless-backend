on:
  push:
    branches:
      - "*"

name: NodeJS

permissions:
  contents: read
  packages: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# cancel in-progress runs
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  docker:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
      - uses: actions/checkout@v4
      - run: npm ci
      - run: npm run build
      # - run: npm ci --omit=dev
      - name: Login to Github Packages
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ github.ref_name }}

  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: schemaless
          POSTGRES_DB: schemaless
          POSTGRES_PASSWORD: schemaless
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

      redis:
        image: redis
        ports:
          # Maps tcp port 5432 on service container to the host
          - 6379:6379

    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
      - uses: actions/checkout@v4
      - run: npm ci
      - run: npm run generate
      - run: npm run lint
      - name: Test
        run: npm run test
        env:
          POSTGRES_URI: postgres://schemaless:schemaless@localhost:5432/schemaless
          REDIS_URI: redis://localhost:6379
          LOG_LEVEL: debug
      - uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      - name: Test with junit
        run: npm run test -- --reporters=jest-junit
        env:
          POSTGRES_URI: postgres://schemaless:schemaless@localhost:5432/schemaless
          REDIS_URI: redis://localhost:6379
          LOG_LEVEL: info
      - uses: codecov/test-results-action@v1
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
